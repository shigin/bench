bench - простая программа для проверки времени
==============================================

Хотя время работы программ сейчас мало кем рассматривается, иногда приходиться
участвовать во флеймах про производительность. Обычно для замеров используют
обычный time. Иногда его даже запускают несколько раз, но редко когда результаты
усредняют, обычно просто берут или нужный, или результат примерно посередине.

bench --- это простейшая программа, которая запускает программу несколько раз и
сообщает минимальное, среднее время, стандартное отклонение и минимальное время.
Дополнительно она может показывать количество выделенных страниц, количество
страниц выделенных из файла подкачки, а также количество переключений контекста.

Перед измерениями выполняется один "разогревающий" прогон, по умолчанию его
результаты не выводятся.

Возможности
===========

 * результаты фильтруются и недостоверные отбрасываются;
 * ввод в тестируемую программу из файла или из другой программы;
 * отключение фильтрации;
 * тестирование сериями;
 * вывод в машиночитаемом формате;
 * разогревающий прогон;
 * тестирование ревизий.

Режимы работы
=============

У программы есть два режима работы: 

 * запуск программы несколько раз и вывод получившийся статистики; запуск в
 * несколько серий: вывод статистики после окончания каждой
 серии.

Пример вывода по сериям:

                                     SUMMARY
     #|             real time |             user time |           system time
    --+-----------------------+-----------------------+-----------------------
     1| 0.044 [ 0.047]  0.053 | 0.000 [ 0.002]  0.008 | 0.032 [ 0.040]  0.048 
     2| 0.045 [ 0.049]  0.059 | 0.000 [ 0.002]  0.004 | 0.036 [ 0.042]  0.048 
     3| 0.044 [ 0.048]  0.053 | 0.000 [ 0.001]  0.004 | 0.032 [ 0.041]  0.048 
     4| 0.045 [ 0.043]  0.058 | 0.000 [ 0.002]  0.008 | 0.036 [ 0.036]  0.044 
     5| 0.045 [ 0.047]  0.051 | 0.000 [ 0.002]  0.008 | 0.036 [ 0.042]  0.048 
     6| 0.045 [ 0.046]  0.051 | 0.000 [ 0.003]  0.008 | 0.036 [ 0.042]  0.048 
     7| 0.045 [ 0.043]  0.058 | 0.000 [ 0.002]  0.004 | 0.036 [ 0.038]  0.052 
     8| 0.045 [ 0.050]  0.058 | 0.000 [ 0.004]  0.008 | 0.032 [ 0.038]  0.044 
     9| 0.045 [ 0.047]  0.051 | 0.000 [ 0.003]  0.008 | 0.032 [ 0.040]  0.048 
    10| 0.044 [ 0.047]  0.054 | 0.000 [ 0.003]  0.008 | 0.036 [ 0.040]  0.044 
    --+-----------------------+-----------------------+-----------------------

Этот режим предпочтителен, если вы смотрите как срабатывает кеширование или
изменяется режим работы CPU. В этом режиме фильтрация отключена.

Сравнение ревизий
=================

Реальная задача: у нас существует репозиторий проекта, а мы хотим как менялось
время выполнение работы для разных ревизий. Это достаточно легко
автоматизируется с помощью bench-git и bench-svn. Вы задаете адрес репозитория, 
номера нужных ревизий и программу для запуска. 

В результате у вас появляется аккуратная табличка вида:

    ----------+-------------------+-------------------+------------------
    revision  |       real        |       user        |        sys
              |  mean       sd    |  mean       sd    |  mean       sd
    ----------+-------------------+-------------------+------------------
        bef1  |  0.082     0.000  |  0.000     0.000  |  0.001     0.002
        bdf3  |  0.062     0.000  |  0.000     0.000  |  0.001     0.002
        6454  |  0.072     0.000  |  0.000     0.000  |  0.002     0.002
        b440  |  0.041     0.000  |  0.000     0.001  |  0.001     0.002
    ----------+-------------------+-------------------+------------------

Дополнительно возможно выводить максимальное и минимальное время работы для
каждой из ревизий.

Дополнительная информация
=========================

Для легкого переноса на разные машины программа написана с минимумом
зависимостей: компилятор C (для Sun OS надо включить заголовок compat.h), sh
(проверено на dash, bash и freebsd sh, bench-git/svn не проверялся на Sun OS),
nroff с tbl.

configure скрипт не написан, но на всех доступных мне linux'ах и freebsd'ях все
собирается само.
